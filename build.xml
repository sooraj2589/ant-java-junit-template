<?xml version="1.0" encoding="UTF-8"?>
<project name="ant-java-junit-template" basedir=".">

    <property name="src.dir" location="src" />
    <property name="test.dir" location="test" />
    <property name="cobertura.dir" location="lib" />
    <property name="build.dir" location="classes" />
    <property name="instrumented.dir" location="instrumented" />
    <property name="reports.dir" location="reports" />
    <property name="reports.xml.dir" location="${reports.dir}/junit-xml" />
    <property name="reports.html.dir" location="${reports.dir}/junit-html" />
    <property name="coverage.xml.dir" location="${reports.dir}/cobertura-xml" />
    <property name="coverage.summaryxml.dir" location="${reports.dir}/cobertura-summary-xml" />
    <property name="coverage.html.dir" location="${reports.dir}/cobertura-html" />
    <property name="checkstyle.txt.dir" location="${reports.dir}/checkstyle-txt" />
    <property name="checkstyle.xml.dir" location="${reports.dir}/checkstyle-xml" />
    <property name="checkstyle.config" value="/google_checks.xml" />

    <path id="cobertura.classpath">
        <fileset dir="${cobertura.dir}">
            <include name="cobertura*.jar" />
            <include name="cobertura-dependencies/*.jar" />
        </fileset>
    </path>

    <!-- "checkstyle" task definition -->
    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpath="lib/checkstyle-6.16-all.jar" />
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

    <target name="clean" description="Remove all files created by the build/test process.">
        <delete dir="${build.dir}" />
        <delete dir="${instrumented.dir}" />
        <delete dir="${reports.dir}" />
        <delete file="cobertura.log" />
        <delete file="cobertura.ser" />
    </target>

    <target name="init" description="Create the required folders for the build.">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${instrumented.dir}" />
        <mkdir dir="${reports.xml.dir}" />
        <mkdir dir="${reports.html.dir}" />
        <mkdir dir="${coverage.xml.dir}" />
        <mkdir dir="${coverage.summaryxml.dir}" />
        <mkdir dir="${coverage.html.dir}" />
        <mkdir dir="${checkstyle.txt.dir}" />
        <mkdir dir="${checkstyle.xml.dir}" />
    </target>

    <target name="compile" depends="init" description="Compile the source code and the JUnit tests.">
        <javac srcdir="${src.dir}" destdir="${build.dir}" debug="yes" includeantruntime="no">
            <classpath refid="cobertura.classpath" />
        </javac>
        <javac srcdir="${test.dir}" destdir="${build.dir}" includeantruntime="no">
            <classpath refid="cobertura.classpath" />
        </javac>
    </target>

    <target name="instrument" depends="init,compile" description="Create instrumentation for 'Cobertura'.">
        <delete file="cobertura.ser" />
        <delete dir="${instrumented.dir}" />

        <cobertura-instrument todir="${instrumented.dir}">
            <ignore regex="org.slf4j.*" />
            <fileset dir="${build.dir}">
                <include name="**/*.class" />
                <exclude name="**/*Test.class" />
            </fileset>
        </cobertura-instrument>

    </target>

    <target name="test" depends="init,compile" description="Run the JUnit tests.">
        <junit fork="yes" dir="${basedir}" failureProperty="test.failed">
            <!--
				Note the classpath order: instrumented classes are before the
				original (uninstrumented) classes.  This is important.
			-->
            <classpath location="${instrumented.dir}" />
            <classpath location="${build.dir}" />
            <!--
				The instrumented classes reference classes used by the
				Cobertura runtime, so Cobertura and its dependencies
				must be on your classpath.
			-->
            <classpath refid="cobertura.classpath" />
            <formatter type="xml" />
            <test name="${testcase}" todir="${reports.xml.dir}" if="testcase" />
            <batchtest todir="${reports.xml.dir}" unless="testcase">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${reports.xml.dir}">
            <fileset dir="${reports.xml.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${reports.html.dir}" />
        </junitreport>
    </target>

    <target name="coverage-check">
        <cobertura-check branchrate="34" totallinerate="100" />
    </target>

    <target name="coverage-reports" description="generate XML and HTML reports with coverage data.">
        <cobertura-report srcdir="${src.dir}" destdir="${coverage.xml.dir}" format="xml" />
        <cobertura-report srcdir="${src.dir}" destdir="${coverage.summaryxml.dir}" format="summaryXml" />
        <cobertura-report destdir="${coverage.html.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.java" />
            </fileset>
        </cobertura-report>
    </target>

    <!-- Check source code style -->
    <target name="checkstyle" depends="init" description="Check code style with 'checkstyle'">
        <checkstyle config="${checkstyle.config}">
            <fileset dir="${src.dir}">
                <include name="**/*.java" />
            </fileset>
            <formatter type="plain" tofile="${checkstyle.txt.dir}/checkstyle-results.txt" />
            <formatter type="xml" tofile="${checkstyle.xml.dir}/checkstyle-results.xml" />
        </checkstyle>
    </target>

    <target name="coverage" depends="compile,instrument,test,coverage-reports" description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports." />

</project>
